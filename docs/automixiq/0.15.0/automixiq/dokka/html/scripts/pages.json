[{"name":"class AutomixSDK","description":"com.tunedglobal.automix.AutomixSDK","location":"-automix-i-q/com.tunedglobal.automix/-automix-s-d-k/index.html","searchKeys":["AutomixSDK","class AutomixSDK","com.tunedglobal.automix.AutomixSDK"]},{"name":"fun addStatusListener(statusListener: AutomixIQStatusListener)","description":"com.tunedglobal.automix.AutomixSDK.addStatusListener","location":"-automix-i-q/com.tunedglobal.automix/-automix-s-d-k/add-status-listener.html","searchKeys":["addStatusListener","fun addStatusListener(statusListener: AutomixIQStatusListener)","com.tunedglobal.automix.AutomixSDK.addStatusListener"]},{"name":"fun addTrack(identifier: String, metadata: AutomixIQTrackModel?, index: Int, onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","description":"com.tunedglobal.automix.AutomixSDK.addTrack","location":"-automix-i-q/com.tunedglobal.automix/-automix-s-d-k/add-track.html","searchKeys":["addTrack","fun addTrack(identifier: String, metadata: AutomixIQTrackModel?, index: Int, onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","com.tunedglobal.automix.AutomixSDK.addTrack"]},{"name":"fun addTracks(identifiers: List<String>, metadata: List<AutomixIQTrackModel>?, index: Int, onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","description":"com.tunedglobal.automix.AutomixSDK.addTracks","location":"-automix-i-q/com.tunedglobal.automix/-automix-s-d-k/add-tracks.html","searchKeys":["addTracks","fun addTracks(identifiers: List<String>, metadata: List<AutomixIQTrackModel>?, index: Int, onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","com.tunedglobal.automix.AutomixSDK.addTracks"]},{"name":"fun automixOff(onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","description":"com.tunedglobal.automix.AutomixSDK.automixOff","location":"-automix-i-q/com.tunedglobal.automix/-automix-s-d-k/automix-off.html","searchKeys":["automixOff","fun automixOff(onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","com.tunedglobal.automix.AutomixSDK.automixOff"]},{"name":"fun automixOn(identifiers: List<String>, metadata: List<AutomixIQTrackModel>?, playTrackIndex: Int, seconds: Float, autoplay: Boolean, contextType: String?, contextId: String?, onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","description":"com.tunedglobal.automix.AutomixSDK.automixOn","location":"-automix-i-q/com.tunedglobal.automix/-automix-s-d-k/automix-on.html","searchKeys":["automixOn","fun automixOn(identifiers: List<String>, metadata: List<AutomixIQTrackModel>?, playTrackIndex: Int, seconds: Float, autoplay: Boolean, contextType: String?, contextId: String?, onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","com.tunedglobal.automix.AutomixSDK.automixOn"]},{"name":"fun automixOn(onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","description":"com.tunedglobal.automix.AutomixSDK.automixOn","location":"-automix-i-q/com.tunedglobal.automix/-automix-s-d-k/automix-on.html","searchKeys":["automixOn","fun automixOn(onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","com.tunedglobal.automix.AutomixSDK.automixOn"]},{"name":"fun back(onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","description":"com.tunedglobal.automix.AutomixSDK.back","location":"-automix-i-q/com.tunedglobal.automix/-automix-s-d-k/back.html","searchKeys":["back","fun back(onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","com.tunedglobal.automix.AutomixSDK.back"]},{"name":"fun clearCache(onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","description":"com.tunedglobal.automix.AutomixSDK.clearCache","location":"-automix-i-q/com.tunedglobal.automix/-automix-s-d-k/clear-cache.html","searchKeys":["clearCache","fun clearCache(onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","com.tunedglobal.automix.AutomixSDK.clearCache"]},{"name":"fun forceRefreshCredentials(onComplete: () -> Unit? = null, onError: (AutomixIQError) -> Unit? = null)","description":"com.tunedglobal.automix.AutomixSDK.forceRefreshCredentials","location":"-automix-i-q/com.tunedglobal.automix/-automix-s-d-k/force-refresh-credentials.html","searchKeys":["forceRefreshCredentials","fun forceRefreshCredentials(onComplete: () -> Unit? = null, onError: (AutomixIQError) -> Unit? = null)","com.tunedglobal.automix.AutomixSDK.forceRefreshCredentials"]},{"name":"fun getAutomixStatus(): AutomixIQStatus?","description":"com.tunedglobal.automix.AutomixSDK.getAutomixStatus","location":"-automix-i-q/com.tunedglobal.automix/-automix-s-d-k/get-automix-status.html","searchKeys":["getAutomixStatus","fun getAutomixStatus(): AutomixIQStatus?","com.tunedglobal.automix.AutomixSDK.getAutomixStatus"]},{"name":"fun getAutomixStreamingListener(): AutomixIQStreamingListener?","description":"com.tunedglobal.automix.AutomixSDK.getAutomixStreamingListener","location":"-automix-i-q/com.tunedglobal.automix/-automix-s-d-k/get-automix-streaming-listener.html","searchKeys":["getAutomixStreamingListener","fun getAutomixStreamingListener(): AutomixIQStreamingListener?","com.tunedglobal.automix.AutomixSDK.getAutomixStreamingListener"]},{"name":"fun getInstance(): AutomixSDK?","description":"com.tunedglobal.automix.AutomixSDK.Companion.getInstance","location":"-automix-i-q/com.tunedglobal.automix/-automix-s-d-k/-companion/get-instance.html","searchKeys":["getInstance","fun getInstance(): AutomixSDK?","com.tunedglobal.automix.AutomixSDK.Companion.getInstance"]},{"name":"fun getTunedCredentials(): AutomixIQTunedAuthenticationResponse","description":"com.tunedglobal.automix.AutomixSDK.getTunedCredentials","location":"-automix-i-q/com.tunedglobal.automix/-automix-s-d-k/get-tuned-credentials.html","searchKeys":["getTunedCredentials","fun getTunedCredentials(): AutomixIQTunedAuthenticationResponse","com.tunedglobal.automix.AutomixSDK.getTunedCredentials"]},{"name":"fun initialise(applicationContext: Context, automixIQTunedRestHook: AutomixIQTunedRestHook, config: AutomixIQConfig, musicCacheHook: AutomixIQTunedMusicCacheHook? = null, onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","description":"com.tunedglobal.automix.AutomixSDK.Companion.initialise","location":"-automix-i-q/com.tunedglobal.automix/-automix-s-d-k/-companion/initialise.html","searchKeys":["initialise","fun initialise(applicationContext: Context, automixIQTunedRestHook: AutomixIQTunedRestHook, config: AutomixIQConfig, musicCacheHook: AutomixIQTunedMusicCacheHook? = null, onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","com.tunedglobal.automix.AutomixSDK.Companion.initialise"]},{"name":"fun initialise(applicationContext: Context, streamingListener: AutomixIQStreamingListener, config: AutomixIQConfig, onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","description":"com.tunedglobal.automix.AutomixSDK.Companion.initialise","location":"-automix-i-q/com.tunedglobal.automix/-automix-s-d-k/-companion/initialise.html","searchKeys":["initialise","fun initialise(applicationContext: Context, streamingListener: AutomixIQStreamingListener, config: AutomixIQConfig, onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","com.tunedglobal.automix.AutomixSDK.Companion.initialise"]},{"name":"fun initialised(): Boolean","description":"com.tunedglobal.automix.AutomixSDK.initialised","location":"-automix-i-q/com.tunedglobal.automix/-automix-s-d-k/initialised.html","searchKeys":["initialised","fun initialised(): Boolean","com.tunedglobal.automix.AutomixSDK.initialised"]},{"name":"fun loadTracks(identifiers: List<String>, metadata: List<AutomixIQTrackModel>?, playTrackIndex: Int, seconds: Float, autoplay: Boolean, contextType: String?, contextId: String?, onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","description":"com.tunedglobal.automix.AutomixSDK.loadTracks","location":"-automix-i-q/com.tunedglobal.automix/-automix-s-d-k/load-tracks.html","searchKeys":["loadTracks","fun loadTracks(identifiers: List<String>, metadata: List<AutomixIQTrackModel>?, playTrackIndex: Int, seconds: Float, autoplay: Boolean, contextType: String?, contextId: String?, onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","com.tunedglobal.automix.AutomixSDK.loadTracks"]},{"name":"fun loopPlayingTrack(onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","description":"com.tunedglobal.automix.AutomixSDK.loopPlayingTrack","location":"-automix-i-q/com.tunedglobal.automix/-automix-s-d-k/loop-playing-track.html","searchKeys":["loopPlayingTrack","fun loopPlayingTrack(onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","com.tunedglobal.automix.AutomixSDK.loopPlayingTrack"]},{"name":"fun mixIentifier(): Long","description":"com.tunedglobal.automix.AutomixSDK.mixIentifier","location":"-automix-i-q/com.tunedglobal.automix/-automix-s-d-k/mix-ientifier.html","searchKeys":["mixIentifier","fun mixIentifier(): Long","com.tunedglobal.automix.AutomixSDK.mixIentifier"]},{"name":"fun moveTrack(fromIndex: Int, toIndex: Int, onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","description":"com.tunedglobal.automix.AutomixSDK.moveTrack","location":"-automix-i-q/com.tunedglobal.automix/-automix-s-d-k/move-track.html","searchKeys":["moveTrack","fun moveTrack(fromIndex: Int, toIndex: Int, onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","com.tunedglobal.automix.AutomixSDK.moveTrack"]},{"name":"fun next(onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","description":"com.tunedglobal.automix.AutomixSDK.next","location":"-automix-i-q/com.tunedglobal.automix/-automix-s-d-k/next.html","searchKeys":["next","fun next(onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","com.tunedglobal.automix.AutomixSDK.next"]},{"name":"fun on(): Boolean","description":"com.tunedglobal.automix.AutomixSDK.on","location":"-automix-i-q/com.tunedglobal.automix/-automix-s-d-k/on.html","searchKeys":["on","fun on(): Boolean","com.tunedglobal.automix.AutomixSDK.on"]},{"name":"fun pause(onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","description":"com.tunedglobal.automix.AutomixSDK.pause","location":"-automix-i-q/com.tunedglobal.automix/-automix-s-d-k/pause.html","searchKeys":["pause","fun pause(onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","com.tunedglobal.automix.AutomixSDK.pause"]},{"name":"fun placeholderWaveformDataForTrack(identifier: String): AutomixIQWaveformModel?","description":"com.tunedglobal.automix.AutomixSDK.placeholderWaveformDataForTrack","location":"-automix-i-q/com.tunedglobal.automix/-automix-s-d-k/placeholder-waveform-data-for-track.html","searchKeys":["placeholderWaveformDataForTrack","fun placeholderWaveformDataForTrack(identifier: String): AutomixIQWaveformModel?","com.tunedglobal.automix.AutomixSDK.placeholderWaveformDataForTrack"]},{"name":"fun play(onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","description":"com.tunedglobal.automix.AutomixSDK.play","location":"-automix-i-q/com.tunedglobal.automix/-automix-s-d-k/play.html","searchKeys":["play","fun play(onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","com.tunedglobal.automix.AutomixSDK.play"]},{"name":"fun playTrackUntilEndThenPause(onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","description":"com.tunedglobal.automix.AutomixSDK.playTrackUntilEndThenPause","location":"-automix-i-q/com.tunedglobal.automix/-automix-s-d-k/play-track-until-end-then-pause.html","searchKeys":["playTrackUntilEndThenPause","fun playTrackUntilEndThenPause(onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","com.tunedglobal.automix.AutomixSDK.playTrackUntilEndThenPause"]},{"name":"fun previous(onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","description":"com.tunedglobal.automix.AutomixSDK.previous","location":"-automix-i-q/com.tunedglobal.automix/-automix-s-d-k/previous.html","searchKeys":["previous","fun previous(onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","com.tunedglobal.automix.AutomixSDK.previous"]},{"name":"fun removeStatusListener(statusListener: AutomixIQStatusListener)","description":"com.tunedglobal.automix.AutomixSDK.removeStatusListener","location":"-automix-i-q/com.tunedglobal.automix/-automix-s-d-k/remove-status-listener.html","searchKeys":["removeStatusListener","fun removeStatusListener(statusListener: AutomixIQStatusListener)","com.tunedglobal.automix.AutomixSDK.removeStatusListener"]},{"name":"fun removeTrack(index: Int, onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","description":"com.tunedglobal.automix.AutomixSDK.removeTrack","location":"-automix-i-q/com.tunedglobal.automix/-automix-s-d-k/remove-track.html","searchKeys":["removeTrack","fun removeTrack(index: Int, onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","com.tunedglobal.automix.AutomixSDK.removeTrack"]},{"name":"fun reorderTracks(newOrder: List<String>, onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","description":"com.tunedglobal.automix.AutomixSDK.reorderTracks","location":"-automix-i-q/com.tunedglobal.automix/-automix-s-d-k/reorder-tracks.html","searchKeys":["reorderTracks","fun reorderTracks(newOrder: List<String>, onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","com.tunedglobal.automix.AutomixSDK.reorderTracks"]},{"name":"fun resetPlaylistToEmpty(onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","description":"com.tunedglobal.automix.AutomixSDK.resetPlaylistToEmpty","location":"-automix-i-q/com.tunedglobal.automix/-automix-s-d-k/reset-playlist-to-empty.html","searchKeys":["resetPlaylistToEmpty","fun resetPlaylistToEmpty(onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","com.tunedglobal.automix.AutomixSDK.resetPlaylistToEmpty"]},{"name":"fun seekTo(seconds: Float, onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","description":"com.tunedglobal.automix.AutomixSDK.seekTo","location":"-automix-i-q/com.tunedglobal.automix/-automix-s-d-k/seek-to.html","searchKeys":["seekTo","fun seekTo(seconds: Float, onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","com.tunedglobal.automix.AutomixSDK.seekTo"]},{"name":"fun setAutomixPlaySpeed(playSpeed: Float, onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","description":"com.tunedglobal.automix.AutomixSDK.setAutomixPlaySpeed","location":"-automix-i-q/com.tunedglobal.automix/-automix-s-d-k/set-automix-play-speed.html","searchKeys":["setAutomixPlaySpeed","fun setAutomixPlaySpeed(playSpeed: Float, onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","com.tunedglobal.automix.AutomixSDK.setAutomixPlaySpeed"]},{"name":"fun setAutomixVolumeNormalised(volumeNormalised: Float, onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","description":"com.tunedglobal.automix.AutomixSDK.setAutomixVolumeNormalised","location":"-automix-i-q/com.tunedglobal.automix/-automix-s-d-k/set-automix-volume-normalised.html","searchKeys":["setAutomixVolumeNormalised","fun setAutomixVolumeNormalised(volumeNormalised: Float, onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","com.tunedglobal.automix.AutomixSDK.setAutomixVolumeNormalised"]},{"name":"fun setFilterExplicit(filterExplicit: Boolean, onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","description":"com.tunedglobal.automix.AutomixSDK.setFilterExplicit","location":"-automix-i-q/com.tunedglobal.automix/-automix-s-d-k/set-filter-explicit.html","searchKeys":["setFilterExplicit","fun setFilterExplicit(filterExplicit: Boolean, onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","com.tunedglobal.automix.AutomixSDK.setFilterExplicit"]},{"name":"fun setMusicCacheHook(musicCacheHook: AutomixIQTunedMusicCacheHook?)","description":"com.tunedglobal.automix.AutomixSDK.setMusicCacheHook","location":"-automix-i-q/com.tunedglobal.automix/-automix-s-d-k/set-music-cache-hook.html","searchKeys":["setMusicCacheHook","fun setMusicCacheHook(musicCacheHook: AutomixIQTunedMusicCacheHook?)","com.tunedglobal.automix.AutomixSDK.setMusicCacheHook"]},{"name":"fun setMute(on: Boolean, onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","description":"com.tunedglobal.automix.AutomixSDK.setMute","location":"-automix-i-q/com.tunedglobal.automix/-automix-s-d-k/set-mute.html","searchKeys":["setMute","fun setMute(on: Boolean, onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","com.tunedglobal.automix.AutomixSDK.setMute"]},{"name":"fun setPreferredTransitionDurationSeconds(duration: Float, onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","description":"com.tunedglobal.automix.AutomixSDK.setPreferredTransitionDurationSeconds","location":"-automix-i-q/com.tunedglobal.automix/-automix-s-d-k/set-preferred-transition-duration-seconds.html","searchKeys":["setPreferredTransitionDurationSeconds","fun setPreferredTransitionDurationSeconds(duration: Float, onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","com.tunedglobal.automix.AutomixSDK.setPreferredTransitionDurationSeconds"]},{"name":"fun setReplay(on: Boolean, onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","description":"com.tunedglobal.automix.AutomixSDK.setReplay","location":"-automix-i-q/com.tunedglobal.automix/-automix-s-d-k/set-replay.html","searchKeys":["setReplay","fun setReplay(on: Boolean, onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","com.tunedglobal.automix.AutomixSDK.setReplay"]},{"name":"fun setVinylStartStopEnabled(enabled: Boolean, onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","description":"com.tunedglobal.automix.AutomixSDK.setVinylStartStopEnabled","location":"-automix-i-q/com.tunedglobal.automix/-automix-s-d-k/set-vinyl-start-stop-enabled.html","searchKeys":["setVinylStartStopEnabled","fun setVinylStartStopEnabled(enabled: Boolean, onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","com.tunedglobal.automix.AutomixSDK.setVinylStartStopEnabled"]},{"name":"fun setWaveformPointsPerTrack(waveformPointsPerTrack: Int)","description":"com.tunedglobal.automix.AutomixSDK.setWaveformPointsPerTrack","location":"-automix-i-q/com.tunedglobal.automix/-automix-s-d-k/set-waveform-points-per-track.html","searchKeys":["setWaveformPointsPerTrack","fun setWaveformPointsPerTrack(waveformPointsPerTrack: Int)","com.tunedglobal.automix.AutomixSDK.setWaveformPointsPerTrack"]},{"name":"fun skipToTrackAtIndex(index: Int, onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","description":"com.tunedglobal.automix.AutomixSDK.skipToTrackAtIndex","location":"-automix-i-q/com.tunedglobal.automix/-automix-s-d-k/skip-to-track-at-index.html","searchKeys":["skipToTrackAtIndex","fun skipToTrackAtIndex(index: Int, onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","com.tunedglobal.automix.AutomixSDK.skipToTrackAtIndex"]},{"name":"fun stopLoopingPlayingTrack(onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","description":"com.tunedglobal.automix.AutomixSDK.stopLoopingPlayingTrack","location":"-automix-i-q/com.tunedglobal.automix/-automix-s-d-k/stop-looping-playing-track.html","searchKeys":["stopLoopingPlayingTrack","fun stopLoopingPlayingTrack(onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","com.tunedglobal.automix.AutomixSDK.stopLoopingPlayingTrack"]},{"name":"fun terminate()","description":"com.tunedglobal.automix.AutomixSDK.Companion.terminate","location":"-automix-i-q/com.tunedglobal.automix/-automix-s-d-k/-companion/terminate.html","searchKeys":["terminate","fun terminate()","com.tunedglobal.automix.AutomixSDK.Companion.terminate"]},{"name":"fun toggleMute(onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","description":"com.tunedglobal.automix.AutomixSDK.toggleMute","location":"-automix-i-q/com.tunedglobal.automix/-automix-s-d-k/toggle-mute.html","searchKeys":["toggleMute","fun toggleMute(onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","com.tunedglobal.automix.AutomixSDK.toggleMute"]},{"name":"fun toggleReplay(onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","description":"com.tunedglobal.automix.AutomixSDK.toggleReplay","location":"-automix-i-q/com.tunedglobal.automix/-automix-s-d-k/toggle-replay.html","searchKeys":["toggleReplay","fun toggleReplay(onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","com.tunedglobal.automix.AutomixSDK.toggleReplay"]},{"name":"fun waveformDataForTrack(identifier: String, applyEnterTransition: Boolean, applyExitTransition: Boolean): AutomixIQWaveformModel?","description":"com.tunedglobal.automix.AutomixSDK.waveformDataForTrack","location":"-automix-i-q/com.tunedglobal.automix/-automix-s-d-k/waveform-data-for-track.html","searchKeys":["waveformDataForTrack","fun waveformDataForTrack(identifier: String, applyEnterTransition: Boolean, applyExitTransition: Boolean): AutomixIQWaveformModel?","com.tunedglobal.automix.AutomixSDK.waveformDataForTrack"]},{"name":"fun waveformDataForTrack(identifier: String, applyTransitions: Boolean): AutomixIQWaveformModel?","description":"com.tunedglobal.automix.AutomixSDK.waveformDataForTrack","location":"-automix-i-q/com.tunedglobal.automix/-automix-s-d-k/waveform-data-for-track.html","searchKeys":["waveformDataForTrack","fun waveformDataForTrack(identifier: String, applyTransitions: Boolean): AutomixIQWaveformModel?","com.tunedglobal.automix.AutomixSDK.waveformDataForTrack"]},{"name":"object Companion","description":"com.tunedglobal.automix.AutomixSDK.Companion","location":"-automix-i-q/com.tunedglobal.automix/-automix-s-d-k/-companion/index.html","searchKeys":["Companion","object Companion","com.tunedglobal.automix.AutomixSDK.Companion"]}]
