[{"name":"class AutomixIQ","description":"com.tunedglobal.automix.AutomixIQ","location":"-automix-i-q/com.tunedglobal.automix/-automix-i-q/index.html","searchKeys":["AutomixIQ","class AutomixIQ","com.tunedglobal.automix.AutomixIQ"]},{"name":"constructor()","description":"com.tunedglobal.automix.AutomixIQ.AutomixIQ","location":"-automix-i-q/com.tunedglobal.automix/-automix-i-q/-automix-i-q.html","searchKeys":["AutomixIQ","constructor()","com.tunedglobal.automix.AutomixIQ.AutomixIQ"]},{"name":"fun addStatusListener(statusListener: AutomixIQStatusListener)","description":"com.tunedglobal.automix.AutomixIQ.addStatusListener","location":"-automix-i-q/com.tunedglobal.automix/-automix-i-q/add-status-listener.html","searchKeys":["addStatusListener","fun addStatusListener(statusListener: AutomixIQStatusListener)","com.tunedglobal.automix.AutomixIQ.addStatusListener"]},{"name":"fun addTrack(identifier: String, metadata: TunedTrackModel?, contextType: String?, contextId: String?, index: Int, onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","description":"com.tunedglobal.automix.AutomixIQ.addTrack","location":"-automix-i-q/com.tunedglobal.automix/-automix-i-q/add-track.html","searchKeys":["addTrack","fun addTrack(identifier: String, metadata: TunedTrackModel?, contextType: String?, contextId: String?, index: Int, onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","com.tunedglobal.automix.AutomixIQ.addTrack"]},{"name":"fun addTracks(identifiers: List<String>, metadata: List<TunedTrackModel>?, contextType: String?, contextId: String?, index: Int, onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","description":"com.tunedglobal.automix.AutomixIQ.addTracks","location":"-automix-i-q/com.tunedglobal.automix/-automix-i-q/add-tracks.html","searchKeys":["addTracks","fun addTracks(identifiers: List<String>, metadata: List<TunedTrackModel>?, contextType: String?, contextId: String?, index: Int, onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","com.tunedglobal.automix.AutomixIQ.addTracks"]},{"name":"fun automixOff(onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","description":"com.tunedglobal.automix.AutomixIQ.automixOff","location":"-automix-i-q/com.tunedglobal.automix/-automix-i-q/automix-off.html","searchKeys":["automixOff","fun automixOff(onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","com.tunedglobal.automix.AutomixIQ.automixOff"]},{"name":"fun automixOn(identifiers: List<String>, metadata: List<TunedTrackModel>?, playTrackIndex: Int, seconds: Float, autoplay: Boolean, contextType: String?, contextId: String?, onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","description":"com.tunedglobal.automix.AutomixIQ.automixOn","location":"-automix-i-q/com.tunedglobal.automix/-automix-i-q/automix-on.html","searchKeys":["automixOn","fun automixOn(identifiers: List<String>, metadata: List<TunedTrackModel>?, playTrackIndex: Int, seconds: Float, autoplay: Boolean, contextType: String?, contextId: String?, onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","com.tunedglobal.automix.AutomixIQ.automixOn"]},{"name":"fun automixOn(onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","description":"com.tunedglobal.automix.AutomixIQ.automixOn","location":"-automix-i-q/com.tunedglobal.automix/-automix-i-q/automix-on.html","searchKeys":["automixOn","fun automixOn(onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","com.tunedglobal.automix.AutomixIQ.automixOn"]},{"name":"fun back(onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","description":"com.tunedglobal.automix.AutomixIQ.back","location":"-automix-i-q/com.tunedglobal.automix/-automix-i-q/back.html","searchKeys":["back","fun back(onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","com.tunedglobal.automix.AutomixIQ.back"]},{"name":"fun clearCache(onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","description":"com.tunedglobal.automix.AutomixIQ.clearCache","location":"-automix-i-q/com.tunedglobal.automix/-automix-i-q/clear-cache.html","searchKeys":["clearCache","fun clearCache(onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","com.tunedglobal.automix.AutomixIQ.clearCache"]},{"name":"fun forceRefreshCredentials(onComplete: () -> Unit? = null, onError: (AutomixIQError) -> Unit? = null)","description":"com.tunedglobal.automix.AutomixIQ.forceRefreshCredentials","location":"-automix-i-q/com.tunedglobal.automix/-automix-i-q/force-refresh-credentials.html","searchKeys":["forceRefreshCredentials","fun forceRefreshCredentials(onComplete: () -> Unit? = null, onError: (AutomixIQError) -> Unit? = null)","com.tunedglobal.automix.AutomixIQ.forceRefreshCredentials"]},{"name":"fun getAutomixStatus(): AutomixIQStatus?","description":"com.tunedglobal.automix.AutomixIQ.getAutomixStatus","location":"-automix-i-q/com.tunedglobal.automix/-automix-i-q/get-automix-status.html","searchKeys":["getAutomixStatus","fun getAutomixStatus(): AutomixIQStatus?","com.tunedglobal.automix.AutomixIQ.getAutomixStatus"]},{"name":"fun getInstance(): AutomixIQ?","description":"com.tunedglobal.automix.AutomixIQ.Companion.getInstance","location":"-automix-i-q/com.tunedglobal.automix/-automix-i-q/-companion/get-instance.html","searchKeys":["getInstance","fun getInstance(): AutomixIQ?","com.tunedglobal.automix.AutomixIQ.Companion.getInstance"]},{"name":"fun getTunedCredentials(): TunedAuthenticationResponse?","description":"com.tunedglobal.automix.AutomixIQ.getTunedCredentials","location":"-automix-i-q/com.tunedglobal.automix/-automix-i-q/get-tuned-credentials.html","searchKeys":["getTunedCredentials","fun getTunedCredentials(): TunedAuthenticationResponse?","com.tunedglobal.automix.AutomixIQ.getTunedCredentials"]},{"name":"fun initialise(applicationContext: Context, streamingListener: AutomixIQStreamingListener, config: AutomixIQConfig, onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","description":"com.tunedglobal.automix.AutomixIQ.Companion.initialise","location":"-automix-i-q/com.tunedglobal.automix/-automix-i-q/-companion/initialise.html","searchKeys":["initialise","fun initialise(applicationContext: Context, streamingListener: AutomixIQStreamingListener, config: AutomixIQConfig, onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","com.tunedglobal.automix.AutomixIQ.Companion.initialise"]},{"name":"fun initialise(applicationContext: Context, tunedRestHook: TunedRestHook, config: AutomixIQConfig, musicCacheHook: AutomixIQMusicCacheHook? = null, onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","description":"com.tunedglobal.automix.AutomixIQ.Companion.initialise","location":"-automix-i-q/com.tunedglobal.automix/-automix-i-q/-companion/initialise.html","searchKeys":["initialise","fun initialise(applicationContext: Context, tunedRestHook: TunedRestHook, config: AutomixIQConfig, musicCacheHook: AutomixIQMusicCacheHook? = null, onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","com.tunedglobal.automix.AutomixIQ.Companion.initialise"]},{"name":"fun initialised(): Boolean","description":"com.tunedglobal.automix.AutomixIQ.initialised","location":"-automix-i-q/com.tunedglobal.automix/-automix-i-q/initialised.html","searchKeys":["initialised","fun initialised(): Boolean","com.tunedglobal.automix.AutomixIQ.initialised"]},{"name":"fun loadTracks(identifiers: List<String>, metadata: List<TunedTrackModel>?, playTrackIndex: Int, seconds: Float, autoplay: Boolean, contextType: String?, contextId: String?, onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","description":"com.tunedglobal.automix.AutomixIQ.loadTracks","location":"-automix-i-q/com.tunedglobal.automix/-automix-i-q/load-tracks.html","searchKeys":["loadTracks","fun loadTracks(identifiers: List<String>, metadata: List<TunedTrackModel>?, playTrackIndex: Int, seconds: Float, autoplay: Boolean, contextType: String?, contextId: String?, onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","com.tunedglobal.automix.AutomixIQ.loadTracks"]},{"name":"fun loopPlayingTrack(onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","description":"com.tunedglobal.automix.AutomixIQ.loopPlayingTrack","location":"-automix-i-q/com.tunedglobal.automix/-automix-i-q/loop-playing-track.html","searchKeys":["loopPlayingTrack","fun loopPlayingTrack(onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","com.tunedglobal.automix.AutomixIQ.loopPlayingTrack"]},{"name":"fun moveTrack(fromIndex: Int, toIndex: Int, onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","description":"com.tunedglobal.automix.AutomixIQ.moveTrack","location":"-automix-i-q/com.tunedglobal.automix/-automix-i-q/move-track.html","searchKeys":["moveTrack","fun moveTrack(fromIndex: Int, toIndex: Int, onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","com.tunedglobal.automix.AutomixIQ.moveTrack"]},{"name":"fun next(onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","description":"com.tunedglobal.automix.AutomixIQ.next","location":"-automix-i-q/com.tunedglobal.automix/-automix-i-q/next.html","searchKeys":["next","fun next(onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","com.tunedglobal.automix.AutomixIQ.next"]},{"name":"fun on(): Boolean","description":"com.tunedglobal.automix.AutomixIQ.on","location":"-automix-i-q/com.tunedglobal.automix/-automix-i-q/on.html","searchKeys":["on","fun on(): Boolean","com.tunedglobal.automix.AutomixIQ.on"]},{"name":"fun pause(onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","description":"com.tunedglobal.automix.AutomixIQ.pause","location":"-automix-i-q/com.tunedglobal.automix/-automix-i-q/pause.html","searchKeys":["pause","fun pause(onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","com.tunedglobal.automix.AutomixIQ.pause"]},{"name":"fun placeholderWaveformDataForTrack(identifier: String): AutomixIQWaveformModel?","description":"com.tunedglobal.automix.AutomixIQ.placeholderWaveformDataForTrack","location":"-automix-i-q/com.tunedglobal.automix/-automix-i-q/placeholder-waveform-data-for-track.html","searchKeys":["placeholderWaveformDataForTrack","fun placeholderWaveformDataForTrack(identifier: String): AutomixIQWaveformModel?","com.tunedglobal.automix.AutomixIQ.placeholderWaveformDataForTrack"]},{"name":"fun play(onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","description":"com.tunedglobal.automix.AutomixIQ.play","location":"-automix-i-q/com.tunedglobal.automix/-automix-i-q/play.html","searchKeys":["play","fun play(onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","com.tunedglobal.automix.AutomixIQ.play"]},{"name":"fun playTrackUntilEndThenPause(onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","description":"com.tunedglobal.automix.AutomixIQ.playTrackUntilEndThenPause","location":"-automix-i-q/com.tunedglobal.automix/-automix-i-q/play-track-until-end-then-pause.html","searchKeys":["playTrackUntilEndThenPause","fun playTrackUntilEndThenPause(onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","com.tunedglobal.automix.AutomixIQ.playTrackUntilEndThenPause"]},{"name":"fun previous(onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","description":"com.tunedglobal.automix.AutomixIQ.previous","location":"-automix-i-q/com.tunedglobal.automix/-automix-i-q/previous.html","searchKeys":["previous","fun previous(onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","com.tunedglobal.automix.AutomixIQ.previous"]},{"name":"fun removeStatusListener(statusListener: AutomixIQStatusListener)","description":"com.tunedglobal.automix.AutomixIQ.removeStatusListener","location":"-automix-i-q/com.tunedglobal.automix/-automix-i-q/remove-status-listener.html","searchKeys":["removeStatusListener","fun removeStatusListener(statusListener: AutomixIQStatusListener)","com.tunedglobal.automix.AutomixIQ.removeStatusListener"]},{"name":"fun removeTrack(index: Int, onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","description":"com.tunedglobal.automix.AutomixIQ.removeTrack","location":"-automix-i-q/com.tunedglobal.automix/-automix-i-q/remove-track.html","searchKeys":["removeTrack","fun removeTrack(index: Int, onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","com.tunedglobal.automix.AutomixIQ.removeTrack"]},{"name":"fun reorderTracks(newOrder: List<String>, onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","description":"com.tunedglobal.automix.AutomixIQ.reorderTracks","location":"-automix-i-q/com.tunedglobal.automix/-automix-i-q/reorder-tracks.html","searchKeys":["reorderTracks","fun reorderTracks(newOrder: List<String>, onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","com.tunedglobal.automix.AutomixIQ.reorderTracks"]},{"name":"fun resetPlaylistToEmpty(onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","description":"com.tunedglobal.automix.AutomixIQ.resetPlaylistToEmpty","location":"-automix-i-q/com.tunedglobal.automix/-automix-i-q/reset-playlist-to-empty.html","searchKeys":["resetPlaylistToEmpty","fun resetPlaylistToEmpty(onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","com.tunedglobal.automix.AutomixIQ.resetPlaylistToEmpty"]},{"name":"fun seekTo(seconds: Float, onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","description":"com.tunedglobal.automix.AutomixIQ.seekTo","location":"-automix-i-q/com.tunedglobal.automix/-automix-i-q/seek-to.html","searchKeys":["seekTo","fun seekTo(seconds: Float, onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","com.tunedglobal.automix.AutomixIQ.seekTo"]},{"name":"fun setAutomixPlaySpeed(playSpeed: Float, onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","description":"com.tunedglobal.automix.AutomixIQ.setAutomixPlaySpeed","location":"-automix-i-q/com.tunedglobal.automix/-automix-i-q/set-automix-play-speed.html","searchKeys":["setAutomixPlaySpeed","fun setAutomixPlaySpeed(playSpeed: Float, onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","com.tunedglobal.automix.AutomixIQ.setAutomixPlaySpeed"]},{"name":"fun setAutomixVolumeNormalised(volumeNormalised: Float, onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","description":"com.tunedglobal.automix.AutomixIQ.setAutomixVolumeNormalised","location":"-automix-i-q/com.tunedglobal.automix/-automix-i-q/set-automix-volume-normalised.html","searchKeys":["setAutomixVolumeNormalised","fun setAutomixVolumeNormalised(volumeNormalised: Float, onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","com.tunedglobal.automix.AutomixIQ.setAutomixVolumeNormalised"]},{"name":"fun setFilterExplicit(filterExplicit: Boolean, onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","description":"com.tunedglobal.automix.AutomixIQ.setFilterExplicit","location":"-automix-i-q/com.tunedglobal.automix/-automix-i-q/set-filter-explicit.html","searchKeys":["setFilterExplicit","fun setFilterExplicit(filterExplicit: Boolean, onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","com.tunedglobal.automix.AutomixIQ.setFilterExplicit"]},{"name":"fun setMusicCacheHook(musicCacheHook: AutomixIQMusicCacheHook?)","description":"com.tunedglobal.automix.AutomixIQ.setMusicCacheHook","location":"-automix-i-q/com.tunedglobal.automix/-automix-i-q/set-music-cache-hook.html","searchKeys":["setMusicCacheHook","fun setMusicCacheHook(musicCacheHook: AutomixIQMusicCacheHook?)","com.tunedglobal.automix.AutomixIQ.setMusicCacheHook"]},{"name":"fun setMute(on: Boolean, onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","description":"com.tunedglobal.automix.AutomixIQ.setMute","location":"-automix-i-q/com.tunedglobal.automix/-automix-i-q/set-mute.html","searchKeys":["setMute","fun setMute(on: Boolean, onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","com.tunedglobal.automix.AutomixIQ.setMute"]},{"name":"fun setPreferredTransitionDurationSeconds(duration: Float, onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","description":"com.tunedglobal.automix.AutomixIQ.setPreferredTransitionDurationSeconds","location":"-automix-i-q/com.tunedglobal.automix/-automix-i-q/set-preferred-transition-duration-seconds.html","searchKeys":["setPreferredTransitionDurationSeconds","fun setPreferredTransitionDurationSeconds(duration: Float, onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","com.tunedglobal.automix.AutomixIQ.setPreferredTransitionDurationSeconds"]},{"name":"fun setReplay(on: Boolean, onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","description":"com.tunedglobal.automix.AutomixIQ.setReplay","location":"-automix-i-q/com.tunedglobal.automix/-automix-i-q/set-replay.html","searchKeys":["setReplay","fun setReplay(on: Boolean, onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","com.tunedglobal.automix.AutomixIQ.setReplay"]},{"name":"fun setVinylStartStopEnabled(enabled: Boolean, onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","description":"com.tunedglobal.automix.AutomixIQ.setVinylStartStopEnabled","location":"-automix-i-q/com.tunedglobal.automix/-automix-i-q/set-vinyl-start-stop-enabled.html","searchKeys":["setVinylStartStopEnabled","fun setVinylStartStopEnabled(enabled: Boolean, onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","com.tunedglobal.automix.AutomixIQ.setVinylStartStopEnabled"]},{"name":"fun setWaveformPointsPerTrack(waveformPointsPerTrack: Int)","description":"com.tunedglobal.automix.AutomixIQ.setWaveformPointsPerTrack","location":"-automix-i-q/com.tunedglobal.automix/-automix-i-q/set-waveform-points-per-track.html","searchKeys":["setWaveformPointsPerTrack","fun setWaveformPointsPerTrack(waveformPointsPerTrack: Int)","com.tunedglobal.automix.AutomixIQ.setWaveformPointsPerTrack"]},{"name":"fun skipToTrackAtIndex(index: Int, onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","description":"com.tunedglobal.automix.AutomixIQ.skipToTrackAtIndex","location":"-automix-i-q/com.tunedglobal.automix/-automix-i-q/skip-to-track-at-index.html","searchKeys":["skipToTrackAtIndex","fun skipToTrackAtIndex(index: Int, onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","com.tunedglobal.automix.AutomixIQ.skipToTrackAtIndex"]},{"name":"fun stopLoopingPlayingTrack(onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","description":"com.tunedglobal.automix.AutomixIQ.stopLoopingPlayingTrack","location":"-automix-i-q/com.tunedglobal.automix/-automix-i-q/stop-looping-playing-track.html","searchKeys":["stopLoopingPlayingTrack","fun stopLoopingPlayingTrack(onComplete: (AutomixIQStatus?) -> Unit? = null, onError: (AutomixIQError, AutomixIQStatus?) -> Unit? = null)","com.tunedglobal.automix.AutomixIQ.stopLoopingPlayingTrack"]},{"name":"fun terminate()","description":"com.tunedglobal.automix.AutomixIQ.Companion.terminate","location":"-automix-i-q/com.tunedglobal.automix/-automix-i-q/-companion/terminate.html","searchKeys":["terminate","fun terminate()","com.tunedglobal.automix.AutomixIQ.Companion.terminate"]},{"name":"fun waveformDataForTrack(identifier: String, applyEnterTransition: Boolean, applyExitTransition: Boolean): AutomixIQWaveformModel?","description":"com.tunedglobal.automix.AutomixIQ.waveformDataForTrack","location":"-automix-i-q/com.tunedglobal.automix/-automix-i-q/waveform-data-for-track.html","searchKeys":["waveformDataForTrack","fun waveformDataForTrack(identifier: String, applyEnterTransition: Boolean, applyExitTransition: Boolean): AutomixIQWaveformModel?","com.tunedglobal.automix.AutomixIQ.waveformDataForTrack"]},{"name":"fun waveformDataForTrack(identifier: String, applyTransitions: Boolean): AutomixIQWaveformModel?","description":"com.tunedglobal.automix.AutomixIQ.waveformDataForTrack","location":"-automix-i-q/com.tunedglobal.automix/-automix-i-q/waveform-data-for-track.html","searchKeys":["waveformDataForTrack","fun waveformDataForTrack(identifier: String, applyTransitions: Boolean): AutomixIQWaveformModel?","com.tunedglobal.automix.AutomixIQ.waveformDataForTrack"]},{"name":"object Companion","description":"com.tunedglobal.automix.AutomixIQ.Companion","location":"-automix-i-q/com.tunedglobal.automix/-automix-i-q/-companion/index.html","searchKeys":["Companion","object Companion","com.tunedglobal.automix.AutomixIQ.Companion"]}]
